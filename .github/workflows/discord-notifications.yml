name: Discord Notifications

on:
  pull_request:
    types: [opened, review_requested, closed]
  pull_request_review:
    types: [submitted]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      # PR 생성 알림 (수정 없음)
      - name: Notify on PR Opened
        if: github.event.action == 'opened'
        run: |
          curl -H "Content-Type: application/json" \
              -X POST \
              -d '{
                "embeds": [{
                  "title": "🆕 새로운 PR이 생성되었습니다!",
                  "description": "[${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})",
                  "color": 3447003,
                  "fields": [
                    {
                      "name": "👤 작성자",
                      "value": "${{ github.event.pull_request.user.login }}",
                      "inline": true
                    },
                    {
                      "name": "🌿 브랜치",
                      "value": "`${{ github.event.pull_request.head.ref }}` → `${{ github.event.pull_request.base.ref }}`",
                      "inline": true
                    },
                    {
                      "name": "📊 변경사항",
                      "value": "+${{ github.event.pull_request.additions }} -${{ github.event.pull_request.deletions }}",
                      "inline": true
                    }
                  ],
                  "timestamp": "${{ github.event.pull_request.created_at }}"
                }]
              }' \
              ${{ secrets.DISCORD_WEBHOOK_URL }}

      # [개선] 여러 명의 리뷰어를 모두 멘션하도록 수정
      - name: Mention Reviewers
        if: github.event.action == 'review_requested'
        run: |
          # 요청된 리뷰어 목록을 JSON으로 가져옴 (jq 설치 불필요, 기본 제공)
          REVIEWERS_JSON='${{ toJSON(github.event.pull_request.requested_reviewers) }}'

          # 각 리뷰어의 login 값을 추출하여 멘션 문자열 생성
          MENTIONS=""
          for login in $(echo "$REVIEWERS_JSON" | jq -r '.[] | .login'); do
            case "$login" in
              "chen4023")
                MENTIONS="$MENTIONS <@683563560063991848>"
                ;;
              "devjaesung")
                MENTIONS="$MENTIONS <@1344112571330072626>"
                ;;
              "quartzs2")
                MENTIONS="$MENTIONS <@280589926477856778>"
                ;;
              *)
                MENTIONS="$MENTIONS @$login" # 매핑되지 않은 사용자는 GitHub ID로 표시
                ;;
            esac
          done

          # 만약 요청된 리뷰어가 없으면(예: 팀 리뷰), 대신 요청한 사람을 멘션
          if [ -z "$MENTIONS" ]; then
            MENTIONS="**${{ github.event.sender.login }}**님이 팀 리뷰를 요청했습니다."
          fi

          # JSON 페이로드 생성
          JSON_PAYLOAD=$(cat <<EOF
          {
            "content": "🔍 **리뷰 요청이 도착했습니다!** $MENTIONS",
            "embeds": [{
              "title": "리뷰를 부탁드립니다! 👀",
              "description": "[${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})",
              "color": 16776960,
              "fields": [
                {
                  "name": "👤 PR 작성자",
                  "value": "${{ github.event.pull_request.user.login }}",
                  "inline": true
                },
                {
                  "name": "📁 변경사항",
                  "value": "파일 ${{ github.event.pull_request.changed_files }}개 | +${{ github.event.pull_request.additions }} -${{ github.event.pull_request.deletions }}",
                  "inline": false
                }
              ]
            }]
          }
          EOF
          )

          curl -H "Content-Type: application/json" -X POST -d "$JSON_PAYLOAD" ${{ secrets.DISCORD_WEBHOOK_URL }}

      # PR 병합/닫힘 알림 (수정 없음)
      - name: Notify on PR Closed
        if: github.event.action == 'closed'
        run: |
          if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
            STATUS="✅ 병합 완료!"
            COLOR="65280"
            EMOJI="🎉"
          else
            STATUS="❌ PR 닫힘"
            COLOR="16711680"
            EMOJI="🚫"
          fi

          curl -H "Content-Type: application/json" \
              -X POST \
              -d "{
                \"embeds\": [{
                  \"title\": \"$EMOJI $STATUS\",
                  \"description\": \"[${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})\",
                  \"color\": $COLOR,
                  \"fields\": [
                    {
                      \"name\": \"👤 작성자\",
                      \"value\": \"${{ github.event.pull_request.user.login }}\",
                      \"inline\": true
                    },
                    {
                      \"name\": \"🌿 브랜치\",
                      \"value\": \"\`${{ github.event.pull_request.head.ref }}\` → \`${{ github.event.pull_request.base.ref }}\`\",
                      \"inline\": true
                    }
                  ]
                }]
              }" \
              ${{ secrets.DISCORD_WEBHOOK_URL }}

      # [개선] 리뷰 승인 시 PR 작성자 멘션 추가
      - name: Notify on Review Approved
        if: github.event.review.state == 'approved'
        run: |
          # PR 작성자 Discord ID 매핑
          case "${{ github.event.pull_request.user.login }}" in
            "chen4023")
              AUTHOR_MENTION="<@683563560063991848>"
              ;;
            "devjaesung")
              AUTHOR_MENTION="<@1344112571330072626>"
              ;;
            "quartzs2")
              AUTHOR_MENTION="<@280589926477856778>"
              ;;
            *)
              AUTHOR_MENTION="${{ github.event.pull_request.user.login }}"
              ;;
          esac

          curl -H "Content-Type: application/json" \
              -X POST \
              -d "{
                \"content\": \"👍 **리뷰가 승인되었습니다!** $AUTHOR_MENTION\",
                \"embeds\": [{
                  \"title\": \"✅ 리뷰 승인 완료!\",
                  \"description\": \"[${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})\",
                  \"color\": 65280,
                  \"fields\": [
                    {
                      \"name\": \"👀 리뷰어\",
                      \"value\": \"${{ github.event.review.user.login }}\",
                      \"inline\": true
                    },
                    {
                      \"name\": \"💬 리뷰 내용\",
                      \"value\": \"${{ github.event.review.body || '코멘트 없음' }}\",
                      \"inline\": false
                    }
                  ],
                  \"footer\": {
                    \"text\": \"이제 병합할 수 있습니다! 🚀\"
                  }
                }]
              }" \
              ${{ secrets.DISCORD_WEBHOOK_URL }}

      # 변경 사항 요청 알림 (기존 코드 유지, 구조 좋음)
      - name: Notify on Changes Requested
        if: github.event.review.state == 'changes_requested'
        run: |
          # PR 작성자 Discord ID 매핑
          case "${{ github.event.pull_request.user.login }}" in
            "chen4023")
              AUTHOR_MENTION="<@683563560063991848>"
              ;;
            "devjaesung")
              AUTHOR_MENTION="<@1344112571330072626>"
              ;;
            "quartzs2")
              AUTHOR_MENTION="<@280589926477856778>"
              ;;
            *)
              AUTHOR_MENTION="${{ github.event.pull_request.user.login }}"
              ;;
          esac

          curl -H "Content-Type: application/json" \
              -X POST \
              -d "{
                \"content\": \"🔄 **변경사항이 요청되었습니다!** $AUTHOR_MENTION\",
                \"embeds\": [{
                  \"title\": \"❗ 수정이 필요합니다\",
                  \"description\": \"[${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})\",
                  \"color\": 16776960,
                  \"fields\": [
                    {
                      \"name\": \"👀 리뷰어\",
                      \"value\": \"${{ github.event.review.user.login }}\",
                      \"inline\": true
                    },
                    {
                      \"name\": \"📝 요청사항\",
                      \"value\": \"${{ github.event.review.body || '자세한 내용은 PR을 확인해주세요.' }}\",
                      \"inline\": false
                    }
                  ]
                }]
              }" \
              ${{ secrets.DISCORD_WEBHOOK_URL }}
